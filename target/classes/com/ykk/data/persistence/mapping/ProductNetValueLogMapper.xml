<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ykk.data.persistence.dao.ProductNetValueLogMapper" >
  <resultMap id="BaseResultMap" type="com.ykk.data.persistence.model.ProductNetValueLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="value" property="value" jdbcType="DECIMAL" />
    <result column="date_time" property="dateTime" jdbcType="DATE" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, product_id, value, date_time, type, user_id, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product_net_value_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product_net_value_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ykk.data.persistence.model.ProductNetValueLog" >
    insert into product_net_value_log (id, product_id, value, 
      date_time, type, user_id, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{value,jdbcType=DECIMAL}, 
      #{dateTime,jdbcType=DATE}, #{type,jdbcType=TINYINT}, #{userId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ykk.data.persistence.model.ProductNetValueLog" >
    insert into product_net_value_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="dateTime != null" >
        date_time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="value != null" >
        #{value,jdbcType=DECIMAL},
      </if>
      <if test="dateTime != null" >
        #{dateTime,jdbcType=DATE},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ykk.data.persistence.model.ProductNetValueLog" >
    update product_net_value_log
    <set >
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=DECIMAL},
      </if>
      <if test="dateTime != null" >
        date_time = #{dateTime,jdbcType=DATE},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ykk.data.persistence.model.ProductNetValueLog" >
    update product_net_value_log
    set product_id = #{productId,jdbcType=INTEGER},
      value = #{value,jdbcType=DECIMAL},
      date_time = #{dateTime,jdbcType=DATE},
      type = #{type,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>